"""Initial schema with all tables

Revision ID: 079cabab51f2
Revises: 
Create Date: 2025-07-10 10:45:53.633997

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '079cabab51f2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('allergen',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_allergen_id'), 'allergen', ['id'], unique=False)
    op.create_table('ingredient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('calories', sa.Float(), nullable=False),
    sa.Column('protein', sa.Float(), nullable=False),
    sa.Column('fat', sa.Float(), nullable=False),
    sa.Column('carbs', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_ingredient_id'), 'ingredient', ['id'], unique=False)
    op.create_table('meal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_meal_id'), 'meal', ['id'], unique=False)
    op.create_table('ingredient_allergen',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ingredient_id', sa.Integer(), nullable=True),
    sa.Column('allergen_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['allergen_id'], ['allergen.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredient.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ingredient_allergen_id'), 'ingredient_allergen', ['id'], unique=False)
    op.create_table('meal_ingredient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('meal_id', sa.Integer(), nullable=True),
    sa.Column('ingredient_id', sa.Integer(), nullable=True),
    sa.Column('amount_grams', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredient.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['meal_id'], ['meal.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meal_ingredient_id'), 'meal_ingredient', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_meal_ingredient_id'), table_name='meal_ingredient')
    op.drop_table('meal_ingredient')
    op.drop_index(op.f('ix_ingredient_allergen_id'), table_name='ingredient_allergen')
    op.drop_table('ingredient_allergen')
    op.drop_index(op.f('ix_meal_id'), table_name='meal')
    op.drop_table('meal')
    op.drop_index(op.f('ix_ingredient_id'), table_name='ingredient')
    op.drop_table('ingredient')
    op.drop_index(op.f('ix_allergen_id'), table_name='allergen')
    op.drop_table('allergen')
    # ### end Alembic commands ###
